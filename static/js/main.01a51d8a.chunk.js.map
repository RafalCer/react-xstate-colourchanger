{"version":3,"sources":["dmAppointmentLab4.ts","index.tsx"],"names":["say","text","send","_context","type","value","say_ask_nomatch_timeout","say_this","help_message","initial","states","prompt","entry","on","ENDSPEECH","ask1","delay","id","ask2","ask3","ask4","nomatch","timeout1","timeout2","timeout3","timeout4","idle","to_do","specific","canceled","help","grammar","person","day","time","boolean_grammar","agreement","Boolean","disagreement","uncertain","cancel","actions","dmMachine","start_point","CLICK","appointment","who","RECOGNISED","cond","context","recResult","assign","target","TIMEOUT1","TIMEOUT2","TIMEOUT3","TIMEOUT4","length","whole_day","repetition","confirmation","inspect","url","iframe","machine","Machine","dm","asrtts","LISTEN","SPEAK","event","ttsAgenda","recognising","exit","ASRRESULT","progress","match","speaking","recLogResult","console","log","test","logIntent","nluData","intent","name","ReactiveButton","props","state","matches","className","style","animation","App","useSpeechSynthesis","onEnd","speak","useSpeechRecognition","onResult","result","listen","stop","listening","useMachine","devTools","recStart","asEffect","interimResults","continuous","recStop","changeColour","document","body","background","ttsStart","effect","ttsCancel","current","onClick","rootElement","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.01a51d8a.chunk.js","sourcesContent":["import { MachineConfig, send, Action, assign, actions } from \"xstate\";\r\n\r\n\r\nexport function say(text: string): Action<SDSContext, SDSEvent> {\r\n    return send((_context: SDSContext) => ({ type: \"SPEAK\", value: text }))\r\n}\r\n\r\nexport function listen(): Action<SDSContext, SDSEvent> {\r\n    return send('LISTEN')\r\n}\r\n\r\n\r\n\r\nfunction say_ask_nomatch_timeout(say_this: Action<SDSContext, SDSEvent>, help_message: string): MachineConfig<SDSContext, any, SDSEvent> {\r\n    return ({ \r\n        initial: 'prompt',\r\n        states: {\r\n            prompt: {\r\n                entry: say_this,\r\n\r\n                on: { ENDSPEECH: 'ask1' }\r\n            },\r\n            ask1: {\r\n                entry: [send('LISTEN'), send ('TIMEOUT1', {delay: 4500, id: 'time1'})]\r\n            },\r\n            ask2: {\r\n                entry: [send('LISTEN'), send ('TIMEOUT2', {delay: 4500, id: 'time2'})]\r\n            },\r\n            ask3: {\r\n                entry: [send('LISTEN'), send ('TIMEOUT3', {delay: 4500, id: 'time3'})]\r\n            },\r\n            ask4: {\r\n                entry: [send('LISTEN'), send ('TIMEOUT4', {delay: 4500, id: 'time4'})]\r\n            },\r\n            nomatch: {\r\n                entry: say('Sorry, I did not manage to understand this one. Please repeat.'),\r\n                on: {ENDSPEECH: \"ask2\"}\r\n            },\r\n            timeout1: {\r\n                entry: say('I did not hear you this time, please speak louder.'),\r\n                on: {ENDSPEECH: \"ask2\"}\r\n            },\r\n            timeout2: {\r\n                entry: say('I still cannot hear you, please try again.'),\r\n                on: {ENDSPEECH: \"ask3\"}\r\n            },\r\n            timeout3: {\r\n                entry: say('Sorry, still nothing.'),\r\n                on: {ENDSPEECH: \"ask4\"}\r\n            },\r\n            timeout4: {\r\n                //Add idle state after 3 reprompts//\r\n                entry: say('Returning to idle.'),\r\n                on: {ENDSPEECH: \"idle\"}\r\n            },\r\n            idle:{\r\n                type: 'final'\r\n            },\r\n            to_do:{\r\n                entry: say('Sorry, this tool has not been developed yet. I will now return to idle state.'),\r\n                on: {ENDSPEECH: 'idle'}\r\n            },\r\n            specific:{\r\n                entry: say(\"Please be more specific\"),\r\n                on: {ENDSPEECH: \"ask2\"}\r\n            },\r\n            canceled:{\r\n                entry: say(\"Your appointment has been canceled. I will now returnto idle state.\")\r\n            },\r\n            help:{\r\n                entry: say(help_message),\r\n                on: {ENDSPEECH: \"ask2\"}\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\nconst rasaurl = 'https://rafalappointment.herokuapp.com/model/parse'\r\nconst nluRequest = (text: string) =>\r\n    fetch(new Request(proxyurl + rasaurl, {\r\n        method: 'POST',\r\n        headers: { 'Origin': 'http://maraev.me' }, // only required with proxy\r\n        body: `{\"text\": \"${text}\"}`\r\n    }))\r\n        .then(data => data.json()); \r\n\r\nconst grammar: { [index: string]: { person?: string, day?: string, time?: string, help?: string } } = {\r\n    \"John\": { person: \"John Appleseed\" },\r\n    \"John Appleseed\": { person: \"John Appleseed\" },\r\n    \"Jack\": { person: \"Jack Jackson\" },\r\n    \"Jack Jackson\": { person: \"Jack Jackson\" },\r\n    \"Liana\": { person: \"Liana Jelena\" },\r\n    \"Liana Jelena\": { person: \"Liana Jelena\" },\r\n    \"Natalie\": { person: \"Natalie Portman\" },\r\n    \"Natalie Portman\": { person: \"Natalie Portman\" },\r\n    \"Bruce\": { person: \"Bruce W\" },\r\n    \"Bob\": { person: \"Bob the builder\" },\r\n    \"Bob the builder\": { person: \"Bob the builder\" },\r\n    \"Shrek\": { person: \"Shrek from the swamp\" },\r\n    \"Shrek from the swap\": { person: \"Shrek from the swamp\" },\r\n\r\n    \"on Monday\": {day: \"Monday\" },\r\n    \"Monday\": {day: \"Monday\" },\r\n    \"on Tuesday\": {day: \"Tuesday\" },\r\n    \"Tuesday\": {day: \"Tuesday\" },\r\n    \"on Wednesday\": {day: \"Wednesday\" },\r\n    \"Wednesday\": {day: \"Wednesday\" },\r\n    \"on Thursday\": {day: \"Thursday\" },\r\n    \"Thursday\": {day: \"Thursday\" },\r\n    \"on Friday\": {day: \"Friday\" },\r\n    \"Friday\": {day: \"Friday\" },\r\n    \"on Satudary\": {day: \"Satuday\" },\r\n    \"Satudary\": {day: \"Satuday\" },\r\n    \"on Sunday\": {day: \"Sunday\" },\r\n    \"Sunday\": {day: \"Sunday\" },\r\n\r\n    \"10\": { time: \"10:00\" },\r\n    \"at 10\": { time: \"10:00\" },\r\n    \"ten\": { time: \"10:00\" },\r\n    \"at ten\": { time: \"10:00\" },\r\n    \"11\": { time: \"11:00\" },\r\n    \"eleven\": { time: \"11:00\" },\r\n    \"at 11\": { time: \"11:00\" },\r\n    \"at eleven\": { time: \"11:00\" },\r\n    \"12\": { time: \"12:00\" },\r\n    \"twelve\": { time: \"12:00\" },\r\n    \"at 12\": { time: \"12:00\" },\r\n    \"at twelve\": { time: \"12:00\" },\r\n    \"13\": { time: \"13:00\" },\r\n    \"thirteen\": { time: \"13:00\" },\r\n    \"at 13\": { time: \"13:00\" },\r\n    \"at thirteen\": { time: \"13:00\" },\r\n    \"14\": { time: \"14:00\" },\r\n    \"fourteen\": { time: \"14:00\" },\r\n    \"at 14\": { time: \"14:00\" },\r\n    \"at fourteen\": { time: \"14:00\" },\r\n    \"15\": { time: \"15:00\" },\r\n    \"fifteen\": { time: \"15:00\" },\r\n    \"at 15\": { time: \"15:00\" },\r\n    \"at fifteen\": { time: \"15:00\" },\r\n    \"16\": { time: \"16:00\" },\r\n    \"sixteen\": { time: \"16:00\" },\r\n    \"at 16\": { time: \"16:00\" },\r\n    \"at sixteen\": { time: \"16:00\" },\r\n    \"17\": { time: \"17:00\" },\r\n    \"seventeen\": { time: \"17:00\" },\r\n    \"at 17\": { time: \"17:00\" },\r\n    \"at seventeen\": { time: \"17:00\" },\r\n    \"18\": { time: \"18:00\" },\r\n    \"eighteen\": { time: \"18:00\" },\r\n    \"at 18\": { time: \"18:00\" },\r\n    \"at eighteen\": { time: \"18:00\" },\r\n    \"19\": { time: \"19:00\" },\r\n    \"nineteen\": { time: \"19:00\" },\r\n    \"at 19\": { time: \"19:00\" },\r\n    \"at nineteen\": { time: \"19:00\" },\r\n    \"20\": { time: \"20:00\" },\r\n    \"twenty\": { time: \"20:00\" },\r\n    \"at 20\": { time: \"20:00\" },\r\n    \"at twenty\": { time: \"20:00\" },\r\n\r\n\r\n    \"help\": {help: \"help\"},\r\n    \"help me\": {help: \"help\"},\r\n    \"Help\": {help: \"help\"},\r\n    \"Help me\": {help: \"help\"},\r\n}\r\n\r\nconst boolean_grammar: {[index: string]: {agreement?: boolean, disagreement?: boolean, uncertain?: string}} = {\r\n    \"yes\": {agreement: Boolean(true)},\r\n    \"of course\": {agreement: Boolean(true)},\r\n    \"sure\": {agreement: Boolean(true)},\r\n    \"absolutely\": {agreement: Boolean(true)},\r\n    \"yes please\": {agreement: Boolean(true)},\r\n    \"no\": {disagreement: Boolean(false)},\r\n    \"no way\": {disagreement: Boolean(false)},\r\n    \"absolutely not\": {disagreement: Boolean(false)},\r\n    \"never\": {disagreement: Boolean(false)},\r\n    \"maybe\": {uncertain: \"unsure\"},\r\n    \"perhaps\": {uncertain: \"unsure\"},\r\n    \"I don't know\": {uncertain: \"unsure\"},\r\n    \"probably\": {uncertain: \"unsure\"},\r\n}\r\n\r\nconst {cancel} = actions\r\n\r\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = ({\r\n    \r\n    initial: 'start_point',\r\n    states: {\r\n        start_point:{\r\n            id: 'starting_poing',\r\n            on: {\r\n                CLICK: 'appointment'\r\n            }\r\n        },\r\n        appointment:{\r\n            initial: 'prompt',\r\n            on:{ ENDSPEECH: 'who'\r\n            },\r\n            states:{\r\n                prompt:{\r\n                    entry: say(\"Let's create an appointment.\")\r\n                }\r\n            }\r\n        },\r\n            who: {\r\n                initial: \"prompt\",\r\n                on: {\r\n                    RECOGNISED: [{\r\n                        cond: (context) => \"person\" in (grammar[context.recResult] || {}),\r\n                        actions: [assign((context) => { return { person: grammar[context.recResult].person } }), cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                        target: \"day\"},\r\n\r\n                        {\r\n                        cond: (context) => \"help\" in (grammar[context.recResult] || {}),\r\n                        actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                        target: \".help\"\r\n                        },\r\n\r\n                    {target: \".nomatch\" }],\r\n                    \r\n                        TIMEOUT1: '.timeout1',\r\n                        TIMEOUT2: '.timeout2',\r\n                        TIMEOUT3: '.timeout3',\r\n                        TIMEOUT4: '.timeout4'\r\n                    \r\n                },\r\n                ...say_ask_nomatch_timeout(say('Who are you meeting with?'), \"Please specify the name of the person you are planning to meet up with. Pick someone from your contacts list.\")\r\n            },\r\n            day: {\r\n                initial: \"prompt\",\r\n                on: {\r\n                    RECOGNISED: [{\r\n                        cond: (context) => \"day\" in (grammar[context.recResult] || {}),\r\n                        actions: [assign((context) => {return{ day: grammar[context.recResult].day}}), cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                        target: \"length\"\r\n                    },\r\n\r\n                    {\r\n                        cond: (context) => \"help\" in (grammar[context.recResult] || {}),\r\n                        actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                        target: \".help\"\r\n                    },\r\n\r\n                    {actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                    target: \".nomatch\"}],\r\n\r\n                    TIMEOUT1: '.timeout1',\r\n                    TIMEOUT2: '.timeout2',\r\n                    TIMEOUT3: '.timeout3',\r\n                    TIMEOUT4: '.timeout4'\r\n                },\r\n                ...say_ask_nomatch_timeout(say('On which day is your meating?'), \"You need to specify the day on which you meeting is to be held. Please pick a day of the week. \") //Can add name specification\r\n            },\r\n            length: {\r\n                initial: \"prompt\" ,\r\n                on: {\r\n                    RECOGNISED: [{\r\n                        cond: (context) => \"agreement\" in (boolean_grammar[context.recResult] || {}),\r\n                        actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                        target: \"whole_day\"},\r\n\r\n                        {cond: (context) => \"disagreement\" in (boolean_grammar[context.recResult] || {}),\r\n                        actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                        target: \"time\"},\r\n\r\n                        {cond: (context) => \"uncertain\" in (boolean_grammar[context.recResult] || {}),\r\n                        actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                        target: \".specific\"},\r\n\r\n                        {cond: (context) => \"help\" in (grammar[context.recResult] || {}),\r\n                        actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                        target: \".help\"},\r\n\r\n                    {actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                        target:\".nomatch\"}],\r\n\r\n                    TIMEOUT1: '.timeout1',\r\n                    TIMEOUT2: '.timeout2',\r\n                    TIMEOUT3: '.timeout3',\r\n                    TIMEOUT4: '.timeout4'\r\n\r\n                    },\r\n                \r\n                    ...say_ask_nomatch_timeout(say('Will it take the whole day?'), \"You need to specify whether your meeting will take the whole day so that I can book it accordingly. Please answer with yes or no.\")\r\n            },\r\n            time: {\r\n                initial: \"prompt\" ,\r\n                on: {\r\n                    RECOGNISED: [{\r\n\r\n                    cond: (context) => \"time\" in (grammar[context.recResult] || {}),\r\n                    actions: [assign((context) => {return{ time: grammar[context.recResult].time}}), cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                    target: \"repetition\"},\r\n\r\n                    {cond: (context) => \"help\" in (grammar[context.recResult] || {}),\r\n                    actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                    target: \".help\"},\r\n\r\n                    {\r\n                    actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                    target: \".nomatch\"\r\n                    }],\r\n\r\n                    TIMEOUT1: '.timeout1',\r\n                    TIMEOUT2: '.timeout2',\r\n                    TIMEOUT3: '.timeout3',\r\n                    TIMEOUT4: '.timeout4'\r\n                },\r\n                ...say_ask_nomatch_timeout(say('At what time is your meeting?'), \"You need to specify the time when your meeting will start so that I can book it accordingly. Please tell me the time in military notation or, in other words, 24-hours format.\")\r\n            },\r\n            whole_day: {\r\n                initial: \"prompt\" ,\r\n                on: {\r\n                    RECOGNISED: [{\r\n                        cond: (context) => \"agreement\" in (boolean_grammar[context.recResult] || {}),\r\n                        actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                        target: \"confirmation\"},\r\n                        {\r\n                        cond: (context) => \"disagreement\" in (boolean_grammar[context.recResult] || {}),\r\n                        actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                        target: \".canceled\"},\r\n\r\n                        {cond: (context) => \"help\" in (grammar[context.recResult] || {}),\r\n                        actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                        target: \".help\"},\r\n\r\n                    {\r\n                    actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                    target: \".nomatch\"}],\r\n\r\n                    TIMEOUT1: '.timeout1',\r\n                    TIMEOUT2: '.timeout2',\r\n                    TIMEOUT3: '.timeout3',\r\n                    TIMEOUT4: '.timeout4'\r\n                },\r\n                ...say_ask_nomatch_timeout(send((context) => ({\r\n                    type: \"SPEAK\",\r\n                    value: `Just to confirm, do you want me to make an appointment with ${context.person} on ${context.day} for the whole day?`})), \r\n                    \"This is just to confirm the details of your meeting, please say 'no' if you want to cancel it and 'yes' if you want to confirm the meeting.\")\r\n                },\r\n            repetition: {\r\n                initial: \"prompt\" ,\r\n                on: {\r\n                    RECOGNISED: [{\r\n                        cond: (context) => \"agreement\" in (boolean_grammar[context.recResult] || {}),\r\n                        actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                        target: \"confirmation\"},\r\n                        \r\n                        {\r\n                        cond: (context) => \"disagreement\" in (boolean_grammar[context.recResult] || {}),\r\n                        actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                        target: \".canceled\"},\r\n\r\n                        {cond: (context) => \"unsure\" in (boolean_grammar[context.recResult] || {}),\r\n                        actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                        target: \".specific\"},\r\n\r\n                        {cond: (context) => \"help\" in (grammar[context.recResult] || {}),\r\n                        actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                        target: \".help\"},\r\n\r\n                    {\r\n                        actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                        target: \".nomatch\"}],\r\n\r\n                    TIMEOUT1: '.timeout1',\r\n                    TIMEOUT2: '.timeout2',\r\n                    TIMEOUT3: '.timeout3',\r\n                    TIMEOUT4: '.timeout4'\r\n                },\r\n                ...say_ask_nomatch_timeout(send((context) => ({\r\n                    type: \"SPEAK\",\r\n                    value: `Just to confirm, do you want me to make an appointment with ${context.person} on ${context.day} at ${context.time}?`})),\r\n                     \"This is just to confirm the details of your meeting, please say 'no' if you want to cancel it and 'yes' if you want to confirm it.\") \r\n                },\r\n            confirmation: {\r\n                initial: \"prompt\" ,\r\n                on: {\r\n                     RECOGNISED: [{\r\n                        cond: (context) => \"agreement\" in (boolean_grammar[context.recResult] || {}),\r\n                        actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                        target: \".to_do\"},\r\n                        {\r\n                        cond: (context) => \"disagreement\" in (boolean_grammar[context.recResult] || {}),\r\n                        actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                        target: \".idle\"},\r\n                        {\r\n                        cond: (context) => \"unsure\" in (boolean_grammar[context.recResult] || {}),\r\n                        actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                        target: \".specific\"},\r\n\r\n                        {cond: (context) => \"help\" in (grammar[context.recResult] || {}),\r\n                        actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                        target: \".help\"},\r\n\r\n                    {\r\n                        actions: [cancel('time1'), cancel('time2'), cancel('time3'), cancel('time4')],\r\n                        target: \".nomatch\"}],\r\n\r\n                    TIMEOUT1: '.timeout1',\r\n                    TIMEOUT2: '.timeout2',\r\n                    TIMEOUT3: '.timeout3',\r\n                    TIMEOUT4: '.timeout4'\r\n                },\r\n                ...say_ask_nomatch_timeout(say('Your appointment has been scheduled! Do you want me to add it to your to do item?'), \r\n                \"The appointment tool has not yet been developed, and I only need to ask this as a formality, please say yes.\")\r\n                }\r\n            },\r\n        }\r\n)","import \"./styles.scss\";\r\nimport * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport { Machine, assign, send, State } from \"xstate\";\r\nimport { useMachine, asEffect } from \"@xstate/react\";\r\nimport { inspect } from \"@xstate/inspect\";\r\nimport { dmMachine } from \"./dmAppointmentLab4\";\r\n\r\n\r\ninspect({\r\n    url: \"https://statecharts.io/inspect\",\r\n    iframe: false\r\n});\r\n\r\nimport { useSpeechSynthesis, useSpeechRecognition } from 'react-speech-kit';\r\n\r\n\r\nconst machine = Machine<SDSContext, any, SDSEvent>({\r\n    id: 'root',\r\n    type: 'parallel',\r\n    states: {\r\n        dm: {\r\n            ...dmMachine\r\n        },\r\n        asrtts: {\r\n            initial: 'idle',\r\n            states: {\r\n                idle: {\r\n                    on: {\r\n                        LISTEN: 'recognising',\r\n                        SPEAK: {\r\n                            target: 'speaking',\r\n                            actions: assign((_context, event) => { return { ttsAgenda: event.value } })\r\n                        }\r\n                    }\r\n                },\r\n                recognising: {\r\n                    initial: 'progress',\r\n                    entry: 'recStart',\r\n                    exit: 'recStop',\r\n                    on: {\r\n                        ASRRESULT: {\r\n                            actions: ['recLogResult',\r\n                                assign((_context, event) => { return { recResult: event.value } })],\r\n                            target: '.match'\r\n                        },\r\n                        RECOGNISED: 'idle',\r\n                        TIMEOUT1: 'idle',\r\n                        TIMEOUT2: 'idle',\r\n                        TIMEOUT3: 'idle',\r\n                        TIMEOUT4: 'idle', \r\n                    },\r\n                    states: {\r\n                        progress: {},\r\n                        match: {\r\n                            entry: send('RECOGNISED'),\r\n                        },\r\n                    }\r\n                },\r\n                speaking: {\r\n                    entry: 'ttsStart',\r\n                    on: {\r\n                        ENDSPEECH: 'idle',\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n},\r\n    {\r\n        actions: {\r\n            recLogResult: (context: SDSContext) => {\r\n                /* context.recResult = event.recResult; */\r\n                console.log('<< ASR: ' + context.recResult);\r\n            },\r\n            test: () => {\r\n                console.log('test')\r\n            },\r\n            logIntent: (context: SDSContext) => {\r\n                /* context.nluData = event.data */\r\n                console.log('<< NLU intent: ' + context.nluData.intent.name)\r\n            }\r\n        },\r\n    });\r\n\r\n\r\n\r\ninterface Props extends React.HTMLAttributes<HTMLElement> {\r\n    state: State<SDSContext, any, any, any>;\r\n}\r\nconst ReactiveButton = (props: Props): JSX.Element => {\r\n    switch (true) {\r\n        case props.state.matches({ asrtts: 'recognising' }):\r\n            return (\r\n                <button type=\"button\" className=\"glow-on-hover\"\r\n                    style={{ animation: \"glowing 20s linear\" }} {...props}>\r\n                    Listening...\r\n                </button>\r\n            );\r\n        case props.state.matches({ asrtts: 'speaking' }):\r\n            return (\r\n                <button type=\"button\" className=\"glow-on-hover\"\r\n                    style={{ animation: \"bordering 1s infinite\" }} {...props}>\r\n                    Speaking...\r\n                </button>\r\n            );\r\n        default:\r\n            return (\r\n                <button type=\"button\" className=\"glow-on-hover\" {...props}>\r\n                    Click to start\r\n                </button >\r\n            );\r\n    }\r\n}\r\n\r\nfunction App() {\r\n    const { speak, cancel, speaking } = useSpeechSynthesis({\r\n        onEnd: () => {\r\n            send('ENDSPEECH');\r\n        },\r\n    });\r\n    const { listen, listening, stop } = useSpeechRecognition({\r\n        onResult: (result: any) => {\r\n            send({ type: \"ASRRESULT\", value: result });\r\n        },\r\n    });\r\n    const [current, send, service] = useMachine(machine, {\r\n        devTools: true,\r\n        actions: {\r\n            recStart: asEffect(() => {\r\n                console.log('Ready to receive a color command.');\r\n                listen({\r\n                    interimResults: false,\r\n                    continuous: true\r\n                });\r\n            }),\r\n            recStop: asEffect(() => {\r\n                console.log('Recognition stopped.');\r\n                stop()\r\n            }),\r\n            changeColour: asEffect((context) => {\r\n                console.log('Repainting...');\r\n                document.body.style.background = context.recResult;\r\n            }),\r\n            ttsStart: asEffect((context, effect) => {\r\n                console.log('Speaking...');\r\n                speak({ text: context.ttsAgenda })\r\n            }),\r\n            ttsCancel: asEffect((context, effect) => {\r\n                console.log('TTS STOP...');\r\n                cancel()\r\n            })\r\n            /* speak: asEffect((context) => {\r\n\t     * console.log('Speaking...');\r\n             *     speak({text: context.ttsAgenda })\r\n             * } */\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <ReactiveButton state={current} onClick={() => send('CLICK')} />\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\n/* RASA API\r\n *  */\r\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\nconst rasaurl = 'https://rafalappointment.herokuapp.com/model/parse'\r\nconst nluRequest = (text: string) =>\r\n    fetch(new Request(proxyurl + rasaurl, {\r\n        method: 'POST',\r\n        headers: { 'Origin': 'http://maraev.me' }, // only required with proxy\r\n        body: `{\"text\": \"${text}\"}`\r\n    }))\r\n        .then(data => data.json());\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n    <App />,\r\n    rootElement);\r\n"],"sourceRoot":""}